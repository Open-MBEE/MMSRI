## Auth config
## local admin user will get created if doesn't exist
#mms.admin.username=test
#mms.admin.password=test
#mms.stream.batch.size=100000
#
##hostnames for services
elasticsearch.host=localhost
#elasticsearch.host=openmbee-elasticsearch.openmbee.svc.cluster.local
 spring.datasource.url=jdbc:postgresql://localhost:5432
#spring.datasource.url=jdbc:postgresql://postgres.openmbee.svc.cluster.local:5432
#
#change the server url
#spring.main.web-application-type=none
#server.port=5000
#server.forward-headers-strategy=framework
#server.ssl.enabled=true
###server.ssl.key-alias=yourkeystorealias
#server.ssl.key-store=classpath:mms.p12
#server.ssl.key-store-password=mms_password
#server.ssl.key-store-type=PKCS12
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
cors.allowed.origins=*
#server.port=5000
#server.forward-headers-strategy=framework
server.ssl.enabled=true
##server.ssl.key-alias=yourkeystorealias
server.ssl.key-store=classpath:mms.p12
server.ssl.key-store-password=mms_password
server.ssl.key-store-type=PKCS12

#
## jwt issued by mms for logins via /authentication
## jwt.secret=make_me_something_really_long
##grabbed from running the following command
## node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
##jwt.secret=d8448f7ad828fe0ed27fffd01059fec974464594fc832c5b50a0c9cdd073b8c8
#jwt.secret=f49cc83d269c46d93b39aa9eb40bdca4b44a5417efa5c7827e992724dc234c59
#jwt.expiration=86400
#jwt.header=Authorization
#
## LDAP config
#ldap.provider.base=ou=personnel,dc=dir,dc=domain,dc=com
#ldap.provider.url=ldaps://your-ldap.domain.com/${ldap.provider.base}
## user and pass to connect to ldap, can be empty if ldap server allows anonymous searches
#ldap.provider.userdn=
#ldap.provider.password=
## ldap user dn pattern, {0} will be replaced with username
#ldap.user.dn.pattern=uid={0}
#ldap.user.attributes.username=uid
#ldap.user.attributes.email=mail
## attribute name of the group name
#ldap.group.role.attribute=cn
## to find groups a user belongs to - search base and ldap search filter
#ldap.group.search.base=ou=personnel,dc=dir,dc=domain,dc=com
#ldap.group.search.filter=(&(objectClass=group)(uniqueMember={0}))
#
## RDB config
## if using mysql instead of postgres, comment and uncomment the corresponding properties
### spring.datasource.url=jdbc:postgresql://localhost:5432\
##spring.datasource.url=jdbc:mysql://localhost:3306
#spring.datasource.database=mms
#spring.datasource.username=mmsuser
#spring.datasource.password=test1234
#spring.datasource.driver-class-name=org.postgresql.Driver
##spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.initialization-mode=never
#
## specifies a prefix for the mms created project db
#rdb.project.prefix=mms
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
## comment and uncomment postgres/mysql as needed
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
##spring.jpa.properties.hibernate.dialect.storage_engine=innodb
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.open-in-view=false
#
#spring.main.allow-bean-definition-overriding=true
#spring.main.allow-circular-references=true
#spring.mvc.pathmatch.matching-strategy=ant_path_matcher
#
### Elasticsearch config
###elasticsearch.host=localhost
##elasticsearch.host=<elasticsearch_openshift_serviceurl>
#elasticsearch.port=9200
#elasticsearch.http=https
#elasticsearch.limit.result=10000
#elasticsearch.limit.term=1000
#elasticsearch.limit.scrollTimeout=1000
#elasticsearch.limit.get=10000
#elasticsearch.limit.index=5000
#elasticsearch.limit.commit=100000
#
## s3 storage config for artifacts
#s3.endpoint=http://localhost:9000
#s3.access_key=admintest
#s3.secret_key=admintest
#s3.region=somewhere
## optional if using minio
#s3.bucket=mms
#
## Swagger UI config https://springdoc.org/
#springdoc.swagger-ui.path=/v3/swagger-ui.html
#springdoc.swagger-ui.operationsSorter=alpha
#springdoc.swagger-ui.tagsSorter=alpha
#springdoc.default-produces-media-type=application/json
#springdoc.swagger-ui.displayOperationId=true
#
## Logbook config https://github.com/zalando/logbook
#logging.level.org.zalando.logbook=TRACE
#logbook.filter.form-request-mode=off
## exclude swagger ui and actuator
#logbook.exclude=/v3/**,/actuator/**
##logbook.write.max-body-size=-1
#logbook.strategy=without-body
## style can be splunk|http|json|curl
#logbook.format.style=splunk
#
## https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html
## https://www.baeldung.com/spring-boot-health-indicators
## currently all /actuator/* endpoints require 'mmsadmin' authority, except for /actuator/health
#management.endpoints.web.exposure.include=*
##management.endpoints.web.exposure.exclude=configprops,env
## old value
## management.endpoint.health.show-details=when_authorized
#management.endpoint.health.show-details=always
#management.endpoint.health.roles=mmsadmin
#
# See authenticator module for example configuration
mms.admin.username=test
mms.admin.password=test
mms.stream.batch.size=10000

jwt.secret=12345678901234567890123456789012
jwt.expiration=86400
jwt.header=Authorization

rdb.project.prefix=mms

# See ldap module for example configuration
ldap.provider.base=ou=something,dc=openmbee,dc=org
ldap.provider.url=ldaps://ldap.openmbee.org/${ldap.provider.base}
ldap.provider.userdn=
ldap.provider.password=
ldap.user.dn.pattern=uid={0}
ldap.user.attributes.username=
ldap.user.attributes.email=
ldap.group.role.attribute=cn
ldap.group.search.base=
ldap.group.search.filter=uniqueMember={0}

# See core module for example configuration
#spring.datasource.url=jdbc:postgresql://postgres:5432
#spring.datasource.url=jdbc:mysql://localhost:3306
spring.datasource.database=mms
spring.datasource.username=mmsuser
spring.datasource.password=test1234
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.initialization-mode=never

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#Configuration for Elasticsearch
#elasticsearch.host=elasticsearch
elasticsearch.port=9200
elasticsearch.http=https
elasticsearch.index.element=mms
elasticsearch.limit.insert=80
elasticsearch.limit.result=10000
elasticsearch.limit.term=1000
elasticsearch.limit.scrollTimeout=1000
elasticsearch.limit.get=10000
elasticsearch.limit.index=5000

#Configuration for TWC
#port is for REST interface
#aliases are for clustered usages
twc.instances[0].url=dev-twc-03.domain.com
twc.instances[0].protocol=https
twc.instances[0].port=8111
twc.instances[0].aliases[0]=dev-twc-02.domain.com
twc.instances[0].aliases[1]=dev-twc-01.domain.com

s3.endpoint=http://minio:9000
s3.access_key=admintest
s3.secret_key=admintest
s3.region=somewhere

springdoc.swagger-ui.path=/v3/swagger-ui.html
#For sorting endpoints alphabetically
springdoc.swagger-ui.operationsSorter=alpha
#For sorting tags alphabetically
springdoc.swagger-ui.tagsSorter=alpha
springdoc.default-produces-media-type=application/json
springdoc.swagger-ui.displayOperationId=true

logging.level.org.zalando.logbook=TRACE
logbook.filter.form-request-mode=off
#exclude swagger ui and actuator
logbook.strategy=without-body
logbook.exclude=/v3/**,/actuator/**
#logbook.write.max-body-size=-1
#splunk|http|json|curl
logbook.format.style=splunk

# https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html
# https://www.baeldung.com/spring-boot-health-indicators
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=configprops,env
management.endpoint.health.show-details=when_authorized
management.endpoint.health.roles=mmsadmin
